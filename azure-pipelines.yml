# Build pipeline for Ubuntu and Windows

trigger:
  tags:
    include:
    - v*
    
jobs:
- job: 'Ubuntu'
  pool:
    vmImage: 'ubuntu-18.04'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.5'
      addToPath: true
  - task: CmdLine@2
    inputs:
      script: |
        python -m pip install --upgrade pip
        python -m pip install matplotlib
        python -m pip install PyQt5
        python -m pip install PyInstaller
  - task: CmdLine@2
    inputs:
      script: 'python -m PyInstaller ChronoPlotter.py --onefile -n ChronoPlotter-Linux'
  - task: GitHubRelease@1
    inputs:
      gitHubConnection: 'Github service connection'
      repositoryName: 'mncoppola/ChronoPlotter'
      action: 'edit'
      target: '$(Build.SourceVersion)'
      tag: '$(Build.SourceBranchName)'
      assets: '$(Pipeline.Workspace)/s/dist/ChronoPlotter-Linux'
      assetUploadMode: 'replace'
      addChangeLog: false

- job: 'Windows'
  pool:
    vmImage: 'windows-latest'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.5'
      addToPath: true
  - task: CmdLine@2
    inputs:
      script: |
        python -m pip install --upgrade pip
        python -m pip install matplotlib
        python -m pip install PyQt5
        python -m pip install PyInstaller
  - task: CmdLine@2
    inputs:
      script: 'python -m PyInstaller ChronoPlotter.py --onefile -w --icon=images\icon.ico -n ChronoPlotter-Windows'
  - task: GitHubRelease@1
    inputs:
      gitHubConnection: 'Github service connection'
      repositoryName: 'mncoppola/ChronoPlotter'
      action: 'edit'
      target: '$(Build.SourceVersion)'
      tag: '$(Build.SourceBranchName)'
      assets: '$(Pipeline.Workspace)\s\dist\ChronoPlotter-Windows.exe'
      assetUploadMode: 'replace'
      addChangeLog: false